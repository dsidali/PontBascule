// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PontBascule.Model;

#nullable disable

namespace PontBascule.Model.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230219225917_bigbang2")]
    partial class bigbang2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PontBascule.Model.Models.Achat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOP")
                        .HasColumnType("datetime2");

                    b.Property<string>("FournisseurOuClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HeureOP")
                        .HasColumnType("time");

                    b.Property<string>("Mat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumBonA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumTicket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PB")
                        .HasColumnType("int");

                    b.Property<int>("PCC")
                        .HasColumnType("int");

                    b.Property<int>("PCV")
                        .HasColumnType("int");

                    b.Property<int>("PQRa")
                        .HasColumnType("int");

                    b.Property<int>("PQS")
                        .HasColumnType("int");

                    b.Property<int>("ParcId")
                        .HasColumnType("int");

                    b.Property<bool>("Termine")
                        .HasColumnType("bit");

                    b.Property<string>("Transporteur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCamion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeTransport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParcId");

                    b.ToTable("Achats");
                });

            modelBuilder.Entity("PontBascule.Model.Models.Parc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("actuel")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Parcs");
                });

            modelBuilder.Entity("PontBascule.Model.Models.Pesage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOP")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("HeureOP")
                        .HasColumnType("time");

                    b.Property<string>("Mat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumBonA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumTicket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PCC")
                        .HasColumnType("int");

                    b.Property<int>("PCV")
                        .HasColumnType("int");

                    b.Property<int>("ParcId")
                        .HasColumnType("int");

                    b.Property<int>("QP")
                        .HasColumnType("int");

                    b.Property<bool>("Termine")
                        .HasColumnType("bit");

                    b.Property<string>("Transporteur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCamion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeTransport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParcId");

                    b.ToTable("Pesages");
                });

            modelBuilder.Entity("PontBascule.Model.Models.Privilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Privileges");
                });

            modelBuilder.Entity("PontBascule.Model.Models.ReceptionRondBeton", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOp")
                        .HasColumnType("datetime2");

                    b.Property<string>("FournisseurOuClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HeureOP")
                        .HasColumnType("time");

                    b.Property<string>("Mat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumBonA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumTicket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PB")
                        .HasColumnType("int");

                    b.Property<int>("PCC")
                        .HasColumnType("int");

                    b.Property<int>("PCV")
                        .HasColumnType("int");

                    b.Property<int>("PQRa")
                        .HasColumnType("int");

                    b.Property<int>("PQS")
                        .HasColumnType("int");

                    b.Property<int>("ParcId")
                        .HasColumnType("int");

                    b.Property<bool>("Termine")
                        .HasColumnType("bit");

                    b.Property<string>("Transporteur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCamion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeTransport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParcId");

                    b.ToTable("ReceptionRondBetons");
                });

            modelBuilder.Entity("PontBascule.Model.Models.ReceptionTransfert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOp")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("HeureOP")
                        .HasColumnType("time");

                    b.Property<string>("Mat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumBL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PCC")
                        .HasColumnType("int");

                    b.Property<int>("PCV")
                        .HasColumnType("int");

                    b.Property<int>("PQR")
                        .HasColumnType("int");

                    b.Property<int>("ParcId")
                        .HasColumnType("int");

                    b.Property<string>("Provenance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Termine")
                        .HasColumnType("bit");

                    b.Property<string>("Transporteur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCamion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeProduitId")
                        .HasColumnType("int");

                    b.Property<string>("TypeTransport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParcId");

                    b.HasIndex("TypeProduitId");

                    b.ToTable("ReceptionTransferts");
                });

            modelBuilder.Entity("PontBascule.Model.Models.SortieRondBeton", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FournisseurOuClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HeureOP")
                        .HasColumnType("time");

                    b.Property<string>("Mat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumBonA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumTicket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PB")
                        .HasColumnType("int");

                    b.Property<int>("PCC")
                        .HasColumnType("int");

                    b.Property<int>("PCV")
                        .HasColumnType("int");

                    b.Property<int>("PQRa")
                        .HasColumnType("int");

                    b.Property<int>("PQS")
                        .HasColumnType("int");

                    b.Property<int>("ParcId")
                        .HasColumnType("int");

                    b.Property<bool>("Termine")
                        .HasColumnType("bit");

                    b.Property<string>("Transporteur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCamion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeTransport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParcId");

                    b.ToTable("SortieRondBetons");
                });

            modelBuilder.Entity("PontBascule.Model.Models.SortieTransfert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HeureOP")
                        .HasColumnType("time");

                    b.Property<string>("Mat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumBL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PCC")
                        .HasColumnType("int");

                    b.Property<int>("PCV")
                        .HasColumnType("int");

                    b.Property<int>("PQS")
                        .HasColumnType("int");

                    b.Property<int>("ParcId")
                        .HasColumnType("int");

                    b.Property<bool>("Termine")
                        .HasColumnType("bit");

                    b.Property<string>("Transporteur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCamion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeProduitId")
                        .HasColumnType("int");

                    b.Property<string>("TypeTransport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParcId");

                    b.HasIndex("TypeProduitId");

                    b.ToTable("SortieTransferts");
                });

            modelBuilder.Entity("PontBascule.Model.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateJour")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypeProduitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeProduitId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("PontBascule.Model.Models.Transporteur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Interne")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transporteurs");
                });

            modelBuilder.Entity("PontBascule.Model.Models.TypeDeCamion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeCamion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeDeCamions");
                });

            modelBuilder.Entity("PontBascule.Model.Models.TypeDeTransport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeTransport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeDeTransports");
                });

            modelBuilder.Entity("PontBascule.Model.Models.TypeProduit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypedeProduit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeProduits");
                });

            modelBuilder.Entity("PontBascule.Model.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParcId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrivilegeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParcId");

                    b.HasIndex("PrivilegeId");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("PontBascule.Model.Models.Achat", b =>
                {
                    b.HasOne("PontBascule.Model.Models.Parc", "Parc")
                        .WithMany()
                        .HasForeignKey("ParcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parc");
                });

            modelBuilder.Entity("PontBascule.Model.Models.Pesage", b =>
                {
                    b.HasOne("PontBascule.Model.Models.Parc", "Parc")
                        .WithMany()
                        .HasForeignKey("ParcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parc");
                });

            modelBuilder.Entity("PontBascule.Model.Models.ReceptionRondBeton", b =>
                {
                    b.HasOne("PontBascule.Model.Models.Parc", "Parc")
                        .WithMany()
                        .HasForeignKey("ParcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parc");
                });

            modelBuilder.Entity("PontBascule.Model.Models.ReceptionTransfert", b =>
                {
                    b.HasOne("PontBascule.Model.Models.Parc", "Parc")
                        .WithMany()
                        .HasForeignKey("ParcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PontBascule.Model.Models.TypeProduit", "TypeProduit")
                        .WithMany()
                        .HasForeignKey("TypeProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parc");

                    b.Navigation("TypeProduit");
                });

            modelBuilder.Entity("PontBascule.Model.Models.SortieRondBeton", b =>
                {
                    b.HasOne("PontBascule.Model.Models.Parc", "Parc")
                        .WithMany()
                        .HasForeignKey("ParcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parc");
                });

            modelBuilder.Entity("PontBascule.Model.Models.SortieTransfert", b =>
                {
                    b.HasOne("PontBascule.Model.Models.Parc", "Parc")
                        .WithMany()
                        .HasForeignKey("ParcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PontBascule.Model.Models.TypeProduit", "TypeProduit")
                        .WithMany()
                        .HasForeignKey("TypeProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parc");

                    b.Navigation("TypeProduit");
                });

            modelBuilder.Entity("PontBascule.Model.Models.Stock", b =>
                {
                    b.HasOne("PontBascule.Model.Models.TypeProduit", "TypeProduit")
                        .WithMany()
                        .HasForeignKey("TypeProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeProduit");
                });

            modelBuilder.Entity("PontBascule.Model.Models.Utilisateur", b =>
                {
                    b.HasOne("PontBascule.Model.Models.Parc", "Parc")
                        .WithMany()
                        .HasForeignKey("ParcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PontBascule.Model.Models.Privilege", "Privilege")
                        .WithMany()
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parc");

                    b.Navigation("Privilege");
                });
#pragma warning restore 612, 618
        }
    }
}
